AND16 gate
/**
 * 16-bit-wise And gate: for i = 0..15: out[i] = a[i] and b[i]*/
CHIP And16 {
	IN a[16], b[16];
	OUT out[16];

	PARTS:
	Nand (a=a[0], b=b[0], out=w1[0]);
  Nand (a=w1[0], b=w1[0], out = out[0]);
  
  Nand (a=a[1], b=b[1], out=w1[1]);
  Nand (a=w1[1], b=w1[1], out = out[1]);
  
  Nand (a=a[2], b=b[2], out=w1[2]);
  Nand (a=w1[2], b=w1[2], out = out[2]);
  
  Nand (a=a[3], b=b[3], out=w1[3]);
  Nand (a=w1[3], b=w1[3], out = out[3]);
  
  Nand (a=a[4], b=b[4], out=w1[4]);
  Nand (a=w1[4], b=w1[4], out = out[4]);
  
  Nand (a=a[5], b=b[5], out=w1[5]);
  Nand (a=w1[5], b=w1[5], out = out[5]);
  
  Nand (a=a[6], b=b[6], out=w1[6]);
  Nand (a=w1[6], b=w1[6], out = out[6]);
  
  Nand (a=a[7], b=b[7], out=w1[7]);
  Nand (a=w1[7], b=w1[7], out = out[7]); 
  
  Nand (a=a[8], b=b[8], out=w1[8]);
  Nand (a=w1[8], b=w1[8], out = out[8]);
  
  Nand (a=a[9], b=b[9], out=w1[9]);
  Nand (a=w1[9], b=w1[9], out = out[9]);
  
  Nand (a=a[10], b=b[10], out=w1[10]);
  Nand (a=w1[10], b=w1[10], out = out[10]);
  
  Nand (a=a[11], b=b[11], out=w1[11]);
  Nand (a=w1[11], b=w1[11], out = out[11]);
  
  Nand (a=a[12], b=b[12], out=w1[12]);
  Nand (a=w1[12], b=w1[12], out = out[12]);
  
  Nand (a=a[13], b=b[13], out=w1[13]);
  Nand (a=w1[13], b=w1[13], out = out[13]);
  
  Nand (a=a[14], b=b[14], out=w1[14]);
  Nand (a=w1[14], b=w1[14], out = out[14]);
  
  Nand (a=a[15], b=b[15], out=w1[15]);
  Nand (a=w1[15], b=w1[15], out = out[15]);
  
  }
